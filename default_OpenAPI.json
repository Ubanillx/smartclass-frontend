{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "接口文档",
    "contact": {}
  },
  "host": "10.0.124.181:12345",
  "basePath": "/api",
  "tags": [
    {
      "name": "achievement-controller",
      "x-order": "2147483647"
    },
    {
      "name": "ai-avatar-chat-controller",
      "x-order": "2147483647"
    },
    {
      "name": "ai-avatar-controller",
      "x-order": "2147483647"
    },
    {
      "name": "announcement-controller",
      "x-order": "2147483647"
    },
    {
      "name": "course-controller",
      "x-order": "2147483647"
    },
    {
      "name": "daily-article-controller",
      "x-order": "2147483647"
    },
    {
      "name": "daily-word-controller",
      "x-order": "2147483647"
    },
    {
      "name": "file-controller",
      "x-order": "2147483647"
    },
    {
      "name": "post-controller",
      "x-order": "2147483647"
    },
    {
      "name": "post-favour-controller",
      "x-order": "2147483647"
    },
    {
      "name": "post-thumb-controller",
      "x-order": "2147483647"
    },
    {
      "name": "user-ai-avatar-controller",
      "x-order": "2147483647"
    },
    {
      "name": "user-controller",
      "x-order": "2147483647"
    },
    {
      "name": "user-learning-controller",
      "x-order": "2147483647"
    },
    {
      "name": "wx-mp-controller",
      "x-order": "2147483647"
    }
  ],
  "paths": {
    "/api/": {
      "get": {
        "tags": [
          "wx-mp-controller"
        ],
        "summary": "check",
        "operationId": "checkUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "echostr",
            "in": "query",
            "description": "echostr",
            "required": false,
            "type": "string"
          },
          {
            "name": "nonce",
            "in": "query",
            "description": "nonce",
            "required": false,
            "type": "string"
          },
          {
            "name": "signature",
            "in": "query",
            "description": "signature",
            "required": false,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "timestamp",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      },
      "post": {
        "tags": [
          "wx-mp-controller"
        ],
        "summary": "receiveMessage",
        "operationId": "receiveMessageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/avatar/add": {
      "post": {
        "tags": [
          "ai-avatar-controller"
        ],
        "summary": "addAiAvatar",
        "operationId": "addAiAvatarUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "aiAvatarAddRequest",
            "description": "aiAvatarAddRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AiAvatarAddRequest",
              "originalRef": "AiAvatarAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/avatar/category": {
      "get": {
        "tags": [
          "ai-avatar-controller"
        ],
        "summary": "listAiAvatarsByCategory",
        "operationId": "listAiAvatarsByCategoryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "category",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«AiAvatarVO»»",
              "originalRef": "BaseResponse«List«AiAvatarVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«AiAvatarVO»»",
              "originalRef": "BaseResponse«List«AiAvatarVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/avatar/delete": {
      "post": {
        "tags": [
          "ai-avatar-controller"
        ],
        "summary": "deleteAiAvatar",
        "operationId": "deleteAiAvatarUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteRequest",
            "description": "deleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest",
              "originalRef": "DeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/avatar/get": {
      "get": {
        "tags": [
          "ai-avatar-controller"
        ],
        "summary": "getAiAvatarById",
        "operationId": "getAiAvatarByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«AiAvatarVO»",
              "originalRef": "BaseResponse«AiAvatarVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«AiAvatarVO»",
              "originalRef": "BaseResponse«AiAvatarVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/avatar/list/page": {
      "post": {
        "tags": [
          "ai-avatar-controller"
        ],
        "summary": "listAiAvatarByPage",
        "operationId": "listAiAvatarByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "aiAvatarQueryRequest",
            "description": "aiAvatarQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AiAvatarQueryRequest",
              "originalRef": "AiAvatarQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«AiAvatarVO»»",
              "originalRef": "BaseResponse«Page«AiAvatarVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«AiAvatarVO»»",
              "originalRef": "BaseResponse«Page«AiAvatarVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/avatar/popular": {
      "get": {
        "tags": [
          "ai-avatar-controller"
        ],
        "summary": "listPopularAiAvatars",
        "operationId": "listPopularAiAvatarsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«AiAvatarVO»»",
              "originalRef": "BaseResponse«List«AiAvatarVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«AiAvatarVO»»",
              "originalRef": "BaseResponse«List«AiAvatarVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/avatar/update": {
      "post": {
        "tags": [
          "ai-avatar-controller"
        ],
        "summary": "updateAiAvatar",
        "operationId": "updateAiAvatarUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "aiAvatarUpdateRequest",
            "description": "aiAvatarUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AiAvatarUpdateRequest",
              "originalRef": "AiAvatarUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/chat/clear": {
      "post": {
        "tags": [
          "ai-avatar-chat-controller"
        ],
        "summary": "clearChatHistory",
        "operationId": "clearChatHistoryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "aiAvatarId",
            "in": "query",
            "description": "aiAvatarId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/chat/history": {
      "get": {
        "tags": [
          "ai-avatar-chat-controller"
        ],
        "summary": "getChatHistory",
        "operationId": "getChatHistoryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "aiAvatarId",
            "in": "query",
            "description": "aiAvatarId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "current",
            "in": "query",
            "description": "current",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "sessionId",
            "in": "query",
            "description": "sessionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«AiAvatarChatVO»»",
              "originalRef": "BaseResponse«Page«AiAvatarChatVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«AiAvatarChatVO»»",
              "originalRef": "BaseResponse«Page«AiAvatarChatVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/chat/send": {
      "post": {
        "tags": [
          "ai-avatar-chat-controller"
        ],
        "summary": "sendMessage",
        "operationId": "sendMessageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "chatRequest",
            "description": "chatRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AiAvatarChatRequest",
              "originalRef": "AiAvatarChatRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«AiAvatarChatVO»",
              "originalRef": "BaseResponse«AiAvatarChatVO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«AiAvatarChatVO»",
              "originalRef": "BaseResponse«AiAvatarChatVO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/ai/chat/sessions": {
      "get": {
        "tags": [
          "ai-avatar-chat-controller"
        ],
        "summary": "getSessionList",
        "operationId": "getSessionListUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "aiAvatarId",
            "in": "query",
            "description": "aiAvatarId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«string»»",
              "originalRef": "BaseResponse«List«string»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«string»»",
              "originalRef": "BaseResponse«List«string»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/announcement/active": {
      "get": {
        "tags": [
          "announcement-controller"
        ],
        "summary": "getActiveAnnouncements",
        "operationId": "getActiveAnnouncementsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«Announcement»»",
              "originalRef": "BaseResponse«List«Announcement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«Announcement»»",
              "originalRef": "BaseResponse«List«Announcement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/announcement/add": {
      "post": {
        "tags": [
          "announcement-controller"
        ],
        "summary": "addAnnouncement",
        "operationId": "addAnnouncementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "announcementAddRequest",
            "description": "announcementAddRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementAddRequest",
              "originalRef": "AnnouncementAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/announcement/delete": {
      "post": {
        "tags": [
          "announcement-controller"
        ],
        "summary": "deleteAnnouncement",
        "operationId": "deleteAnnouncementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteRequest",
            "description": "deleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest",
              "originalRef": "DeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/announcement/get": {
      "get": {
        "tags": [
          "announcement-controller"
        ],
        "summary": "getAnnouncementById",
        "operationId": "getAnnouncementByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Announcement»",
              "originalRef": "BaseResponse«Announcement»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Announcement»",
              "originalRef": "BaseResponse«Announcement»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/announcement/latest": {
      "get": {
        "tags": [
          "announcement-controller"
        ],
        "summary": "getLatestAnnouncements",
        "operationId": "getLatestAnnouncementsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«Announcement»»",
              "originalRef": "BaseResponse«List«Announcement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«Announcement»»",
              "originalRef": "BaseResponse«List«Announcement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/announcement/list/page": {
      "post": {
        "tags": [
          "announcement-controller"
        ],
        "summary": "listAnnouncementByPage",
        "operationId": "listAnnouncementByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "announcementQueryRequest",
            "description": "announcementQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementQueryRequest",
              "originalRef": "AnnouncementQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«Announcement»»",
              "originalRef": "BaseResponse«Page«Announcement»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«Announcement»»",
              "originalRef": "BaseResponse«Page«Announcement»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/announcement/update": {
      "post": {
        "tags": [
          "announcement-controller"
        ],
        "summary": "updateAnnouncement",
        "operationId": "updateAnnouncementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "announcementUpdateRequest",
            "description": "announcementUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnnouncementUpdateRequest",
              "originalRef": "AnnouncementUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/category": {
      "get": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "getAchievementsByCategory",
        "operationId": "getAchievementsByCategoryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«Achievement»»",
              "originalRef": "BaseResponse«List«Achievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«Achievement»»",
              "originalRef": "BaseResponse«List«Achievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/create": {
      "post": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "createAchievement",
        "operationId": "createAchievementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "achievement",
            "description": "achievement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Achievement",
              "originalRef": "Achievement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/delete": {
      "post": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "deleteAchievement",
        "operationId": "deleteAchievementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "achievementId",
            "in": "query",
            "description": "achievementId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/display/create": {
      "post": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "createAchievementDisplay",
        "operationId": "createAchievementDisplayUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "display",
            "description": "display",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AchievementDisplay",
              "originalRef": "AchievementDisplay"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/display/delete": {
      "post": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "deleteAchievementDisplay",
        "operationId": "deleteAchievementDisplayUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "displayId",
            "in": "query",
            "description": "displayId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/display/list": {
      "get": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "getAchievementDisplays",
        "operationId": "getAchievementDisplaysUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "achievementId",
            "in": "query",
            "description": "achievementId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«AchievementDisplay»»",
              "originalRef": "BaseResponse«List«AchievementDisplay»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«AchievementDisplay»»",
              "originalRef": "BaseResponse«List«AchievementDisplay»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/display/type": {
      "get": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "getAchievementDisplayByType",
        "operationId": "getAchievementDisplayByTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "achievementId",
            "in": "query",
            "description": "achievementId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "displayType",
            "in": "query",
            "description": "displayType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«AchievementDisplay»",
              "originalRef": "BaseResponse«AchievementDisplay»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«AchievementDisplay»",
              "originalRef": "BaseResponse«AchievementDisplay»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/display/update": {
      "post": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "updateAchievementDisplay",
        "operationId": "updateAchievementDisplayUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "display",
            "description": "display",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AchievementDisplay",
              "originalRef": "AchievementDisplay"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/get": {
      "get": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "getAchievementById",
        "operationId": "getAchievementByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Achievement»",
              "originalRef": "BaseResponse«Achievement»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Achievement»",
              "originalRef": "BaseResponse«Achievement»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/level": {
      "get": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "getAchievementsByLevel",
        "operationId": "getAchievementsByLevelUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "level",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«Achievement»»",
              "originalRef": "BaseResponse«List«Achievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«Achievement»»",
              "originalRef": "BaseResponse«List«Achievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/page": {
      "get": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "pageAchievements",
        "operationId": "pageAchievementsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "achievementCondition",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "adminId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "badgeUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bannerUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conditionValue",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "createTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iconUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "isDelete",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isHidden",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isSecret",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "points",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rewardType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rewardValue",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "updateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "current",
            "in": "query",
            "description": "current",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«IPage«Achievement»»",
              "originalRef": "BaseResponse«IPage«Achievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«IPage«Achievement»»",
              "originalRef": "BaseResponse«IPage«Achievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/update": {
      "post": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "updateAchievement",
        "operationId": "updateAchievementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "achievement",
            "description": "achievement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Achievement",
              "originalRef": "Achievement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/user/completed": {
      "get": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "getUserCompletedAchievements",
        "operationId": "getUserCompletedAchievementsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserAchievement»»",
              "originalRef": "BaseResponse«List«UserAchievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserAchievement»»",
              "originalRef": "BaseResponse«List«UserAchievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/user/create": {
      "post": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "createUserAchievement",
        "operationId": "createUserAchievementUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "achievementId",
            "in": "query",
            "description": "achievementId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserAchievement»",
              "originalRef": "BaseResponse«UserAchievement»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserAchievement»",
              "originalRef": "BaseResponse«UserAchievement»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/user/grant-reward": {
      "post": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "grantAchievementReward",
        "operationId": "grantAchievementRewardUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "achievementId",
            "in": "query",
            "description": "achievementId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/user/list": {
      "get": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "getUserAchievements",
        "operationId": "getUserAchievementsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserAchievement»»",
              "originalRef": "BaseResponse«List«UserAchievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserAchievement»»",
              "originalRef": "BaseResponse«List«UserAchievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/user/uncompleted": {
      "get": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "getUserUncompletedAchievements",
        "operationId": "getUserUncompletedAchievementsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserAchievement»»",
              "originalRef": "BaseResponse«List«UserAchievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserAchievement»»",
              "originalRef": "BaseResponse«List«UserAchievement»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/achievement/user/update-progress": {
      "post": {
        "tags": [
          "achievement-controller"
        ],
        "summary": "updateUserAchievementProgress",
        "operationId": "updateUserAchievementProgressUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "achievementId",
            "in": "query",
            "description": "achievementId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "progressIncrement",
            "in": "query",
            "description": "progressIncrement",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/courses/create": {
      "post": {
        "tags": [
          "course-controller"
        ],
        "summary": "createCourse",
        "operationId": "createCourseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "course",
            "description": "course",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Course",
              "originalRef": "Course"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/courses/delete": {
      "post": {
        "tags": [
          "course-controller"
        ],
        "summary": "deleteCourse",
        "operationId": "deleteCourseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "courseId",
            "in": "query",
            "description": "courseId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/courses/get": {
      "get": {
        "tags": [
          "course-controller"
        ],
        "summary": "getCourseById",
        "operationId": "getCourseByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "courseId",
            "in": "query",
            "description": "courseId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Course",
              "originalRef": "Course"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Course",
              "originalRef": "Course"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/courses/page": {
      "get": {
        "tags": [
          "course-controller"
        ],
        "summary": "pageCourses",
        "operationId": "pageCoursesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "adminId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "courseType",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "coverImage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "difficulty",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "isDelete",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "objectives",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "originalPrice",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "ratingCount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ratingScore",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "requirements",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "studentCount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "subtitle",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetAudience",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "teacherId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "totalChapters",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "totalDuration",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "totalSections",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "updateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "current",
            "in": "query",
            "description": "current",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IPage«Course»",
              "originalRef": "IPage«Course»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IPage«Course»",
              "originalRef": "IPage«Course»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/courses/update": {
      "post": {
        "tags": [
          "course-controller"
        ],
        "summary": "updateCourse",
        "operationId": "updateCourseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "course",
            "description": "course",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Course",
              "originalRef": "Course"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/courses/updateStatus": {
      "post": {
        "tags": [
          "course-controller"
        ],
        "summary": "updateCourseStatus",
        "operationId": "updateCourseStatusUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "courseId",
            "in": "query",
            "description": "courseId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/daily-goal": {
      "get": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "getUserDailyGoal",
        "operationId": "getUserDailyGoalUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserDailyGoal»",
              "originalRef": "BaseResponse«UserDailyGoal»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserDailyGoal»",
              "originalRef": "BaseResponse«UserDailyGoal»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/daily-goal/consecutive-days": {
      "get": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "getConsecutiveCompletedDays",
        "operationId": "getConsecutiveCompletedDaysUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«int»",
              "originalRef": "BaseResponse«int»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«int»",
              "originalRef": "BaseResponse«int»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/daily-goal/create": {
      "post": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "createUserDailyGoal",
        "operationId": "createUserDailyGoalUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "targetMinutes",
            "in": "query",
            "description": "targetMinutes",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserDailyGoal»",
              "originalRef": "BaseResponse«UserDailyGoal»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserDailyGoal»",
              "originalRef": "BaseResponse«UserDailyGoal»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/daily-goal/is-completed": {
      "get": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "isDailyGoalCompleted",
        "operationId": "isDailyGoalCompletedUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/daily-goal/update-time": {
      "post": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "updateLearningTime",
        "operationId": "updateLearningTimeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "minutesSpent",
            "in": "query",
            "description": "minutesSpent",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/record/article": {
      "post": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "createArticleReadingRecord",
        "operationId": "createArticleReadingRecordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "articleId",
            "in": "query",
            "description": "articleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "duration",
            "in": "query",
            "description": "duration",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserLearningRecord»",
              "originalRef": "BaseResponse«UserLearningRecord»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserLearningRecord»",
              "originalRef": "BaseResponse«UserLearningRecord»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/record/course": {
      "post": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "createCourseLearningRecord",
        "operationId": "createCourseLearningRecordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "courseId",
            "in": "query",
            "description": "courseId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "minutesSpent",
            "in": "query",
            "description": "minutesSpent",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sectionId",
            "in": "query",
            "description": "sectionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserLearningRecord»",
              "originalRef": "BaseResponse«UserLearningRecord»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserLearningRecord»",
              "originalRef": "BaseResponse«UserLearningRecord»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/record/date": {
      "get": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "getUserLearningRecordsByDate",
        "operationId": "getUserLearningRecordsByDateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "date",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserLearningRecord»»",
              "originalRef": "BaseResponse«List«UserLearningRecord»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserLearningRecord»»",
              "originalRef": "BaseResponse«List«UserLearningRecord»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/record/page": {
      "get": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "getUserLearningRecords",
        "operationId": "getUserLearningRecordsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "description": "current",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«IPage«UserLearningRecord»»",
              "originalRef": "BaseResponse«IPage«UserLearningRecord»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«IPage«UserLearningRecord»»",
              "originalRef": "BaseResponse«IPage«UserLearningRecord»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/record/related": {
      "get": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "getUserLearningRecordsByRelatedId",
        "operationId": "getUserLearningRecordsByRelatedIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "relatedId",
            "in": "query",
            "description": "relatedId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserLearningRecord»»",
              "originalRef": "BaseResponse«List«UserLearningRecord»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«UserLearningRecord»»",
              "originalRef": "BaseResponse«List«UserLearningRecord»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/record/type": {
      "get": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "getUserLearningRecordsByType",
        "operationId": "getUserLearningRecordsByTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "description": "current",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "recordType",
            "in": "query",
            "description": "recordType",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«IPage«UserLearningRecord»»",
              "originalRef": "BaseResponse«IPage«UserLearningRecord»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«IPage«UserLearningRecord»»",
              "originalRef": "BaseResponse«IPage«UserLearningRecord»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/record/word": {
      "post": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "createWordLearningRecord",
        "operationId": "createWordLearningRecordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "count",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "wordId",
            "in": "query",
            "description": "wordId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserLearningRecord»",
              "originalRef": "BaseResponse«UserLearningRecord»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserLearningRecord»",
              "originalRef": "BaseResponse«UserLearningRecord»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/stats": {
      "get": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "getUserLearningStats",
        "operationId": "getUserLearningStatsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserLearningStats»",
              "originalRef": "BaseResponse«UserLearningStats»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserLearningStats»",
              "originalRef": "BaseResponse«UserLearningStats»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/stats/add-experience": {
      "post": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "addExperience",
        "operationId": "addExperienceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "experience",
            "in": "query",
            "description": "experience",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/stats/add-points": {
      "post": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "addPoints",
        "operationId": "addPointsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "points",
            "in": "query",
            "description": "points",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/stats/consecutive-days": {
      "get": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "getConsecutiveLearningDays",
        "operationId": "getConsecutiveLearningDaysUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«int»",
              "originalRef": "BaseResponse«int»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«int»",
              "originalRef": "BaseResponse«int»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/api/learning/stats/update": {
      "post": {
        "tags": [
          "user-learning-controller"
        ],
        "summary": "updateLearningStats",
        "operationId": "updateLearningStatsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "articlesRead",
            "in": "query",
            "description": "articlesRead",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "minutesSpent",
            "in": "query",
            "description": "minutesSpent",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "wordsLearned",
            "in": "query",
            "description": "wordsLearned",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/add": {
      "post": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "addDailyArticle",
        "operationId": "addDailyArticleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dailyArticleAddRequest",
            "description": "dailyArticleAddRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DailyArticleAddRequest",
              "originalRef": "DailyArticleAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/category": {
      "get": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "listDailyArticlesByCategory",
        "operationId": "listDailyArticlesByCategoryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "category",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyArticleVO»»",
              "originalRef": "BaseResponse«List«DailyArticleVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyArticleVO»»",
              "originalRef": "BaseResponse«List«DailyArticleVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/date": {
      "get": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "getDailyArticlesByDate",
        "operationId": "getDailyArticlesByDateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyArticleVO»»",
              "originalRef": "BaseResponse«List«DailyArticleVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyArticleVO»»",
              "originalRef": "BaseResponse«List«DailyArticleVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/delete": {
      "post": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "deleteDailyArticle",
        "operationId": "deleteDailyArticleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteRequest",
            "description": "deleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest",
              "originalRef": "DeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/difficulty": {
      "get": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "listDailyArticlesByDifficulty",
        "operationId": "listDailyArticlesByDifficultyUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "difficulty",
            "in": "query",
            "description": "difficulty",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyArticleVO»»",
              "originalRef": "BaseResponse«List«DailyArticleVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyArticleVO»»",
              "originalRef": "BaseResponse«List«DailyArticleVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/get": {
      "get": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "getDailyArticleById",
        "operationId": "getDailyArticleByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«DailyArticleVO»",
              "originalRef": "BaseResponse«DailyArticleVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«DailyArticleVO»",
              "originalRef": "BaseResponse«DailyArticleVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/like": {
      "post": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "likeArticle",
        "operationId": "likeArticleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/list/page": {
      "post": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "listDailyArticleByPage",
        "operationId": "listDailyArticleByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dailyArticleQueryRequest",
            "description": "dailyArticleQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DailyArticleQueryRequest",
              "originalRef": "DailyArticleQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«DailyArticleVO»»",
              "originalRef": "BaseResponse«Page«DailyArticleVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«DailyArticleVO»»",
              "originalRef": "BaseResponse«Page«DailyArticleVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/today": {
      "get": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "getTodayArticles",
        "operationId": "getTodayArticlesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyArticleVO»»",
              "originalRef": "BaseResponse«List«DailyArticleVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyArticleVO»»",
              "originalRef": "BaseResponse«List«DailyArticleVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/article/update": {
      "post": {
        "tags": [
          "daily-article-controller"
        ],
        "summary": "updateDailyArticle",
        "operationId": "updateDailyArticleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dailyArticleUpdateRequest",
            "description": "dailyArticleUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DailyArticleUpdateRequest",
              "originalRef": "DailyArticleUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/word/add": {
      "post": {
        "tags": [
          "daily-word-controller"
        ],
        "summary": "addDailyWord",
        "operationId": "addDailyWordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dailyWordAddRequest",
            "description": "dailyWordAddRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DailyWordAddRequest",
              "originalRef": "DailyWordAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/word/category": {
      "get": {
        "tags": [
          "daily-word-controller"
        ],
        "summary": "listDailyWordsByCategory",
        "operationId": "listDailyWordsByCategoryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "category",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyWordVO»»",
              "originalRef": "BaseResponse«List«DailyWordVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyWordVO»»",
              "originalRef": "BaseResponse«List«DailyWordVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/word/date": {
      "get": {
        "tags": [
          "daily-word-controller"
        ],
        "summary": "getDailyWordsByDate",
        "operationId": "getDailyWordsByDateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "date",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyWordVO»»",
              "originalRef": "BaseResponse«List«DailyWordVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyWordVO»»",
              "originalRef": "BaseResponse«List«DailyWordVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/word/delete": {
      "post": {
        "tags": [
          "daily-word-controller"
        ],
        "summary": "deleteDailyWord",
        "operationId": "deleteDailyWordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteRequest",
            "description": "deleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest",
              "originalRef": "DeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/word/difficulty": {
      "get": {
        "tags": [
          "daily-word-controller"
        ],
        "summary": "listDailyWordsByDifficulty",
        "operationId": "listDailyWordsByDifficultyUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "difficulty",
            "in": "query",
            "description": "difficulty",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyWordVO»»",
              "originalRef": "BaseResponse«List«DailyWordVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyWordVO»»",
              "originalRef": "BaseResponse«List«DailyWordVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/word/get": {
      "get": {
        "tags": [
          "daily-word-controller"
        ],
        "summary": "getDailyWordById",
        "operationId": "getDailyWordByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«DailyWordVO»",
              "originalRef": "BaseResponse«DailyWordVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«DailyWordVO»",
              "originalRef": "BaseResponse«DailyWordVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/word/list/page": {
      "post": {
        "tags": [
          "daily-word-controller"
        ],
        "summary": "listDailyWordByPage",
        "operationId": "listDailyWordByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dailyWordQueryRequest",
            "description": "dailyWordQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DailyWordQueryRequest",
              "originalRef": "DailyWordQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«DailyWordVO»»",
              "originalRef": "BaseResponse«Page«DailyWordVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«DailyWordVO»»",
              "originalRef": "BaseResponse«Page«DailyWordVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/word/today": {
      "get": {
        "tags": [
          "daily-word-controller"
        ],
        "summary": "getTodayWords",
        "operationId": "getTodayWordsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyWordVO»»",
              "originalRef": "BaseResponse«List«DailyWordVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«DailyWordVO»»",
              "originalRef": "BaseResponse«List«DailyWordVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/daily/word/update": {
      "post": {
        "tags": [
          "daily-word-controller"
        ],
        "summary": "updateDailyWord",
        "operationId": "updateDailyWordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dailyWordUpdateRequest",
            "description": "dailyWordUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DailyWordUpdateRequest",
              "originalRef": "DailyWordUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/file/upload": {
      "post": {
        "tags": [
          "file-controller"
        ],
        "summary": "uploadFile",
        "operationId": "uploadFileUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "base64Data",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "biz",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»",
              "originalRef": "BaseResponse«string»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»",
              "originalRef": "BaseResponse«string»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/file/uploadBase64Image": {
      "post": {
        "tags": [
          "file-controller"
        ],
        "summary": "uploadBase64Image",
        "operationId": "uploadBase64ImageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "uploadFileRequest",
            "description": "uploadFileRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadFileRequest",
              "originalRef": "UploadFileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»",
              "originalRef": "BaseResponse«string»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»",
              "originalRef": "BaseResponse«string»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/file/uploadBinaryImage": {
      "post": {
        "tags": [
          "file-controller"
        ],
        "summary": "uploadBinaryImage",
        "operationId": "uploadBinaryImageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "imageBytes",
            "description": "imageBytes",
            "required": true,
            "schema": {
              "type": "string",
              "format": "byte"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»",
              "originalRef": "BaseResponse«string»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»",
              "originalRef": "BaseResponse«string»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/file/uploadImage": {
      "post": {
        "tags": [
          "file-controller"
        ],
        "summary": "uploadImage",
        "operationId": "uploadImageUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»",
              "originalRef": "BaseResponse«string»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«string»",
              "originalRef": "BaseResponse«string»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post/add": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "addPost",
        "operationId": "addPostUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postAddRequest",
            "description": "postAddRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostAddRequest",
              "originalRef": "PostAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post/delete": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "deletePost",
        "operationId": "deletePostUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteRequest",
            "description": "deleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest",
              "originalRef": "DeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post/edit": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "editPost",
        "operationId": "editPostUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postEditRequest",
            "description": "postEditRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostEditRequest",
              "originalRef": "PostEditRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post/get/vo": {
      "get": {
        "tags": [
          "post-controller"
        ],
        "summary": "getPostVOById",
        "operationId": "getPostVOByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«PostVO»",
              "originalRef": "BaseResponse«PostVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«PostVO»",
              "originalRef": "BaseResponse«PostVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post/list/page": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "listPostByPage",
        "operationId": "listPostByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postQueryRequest",
            "description": "postQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostQueryRequest",
              "originalRef": "PostQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«Post»»",
              "originalRef": "BaseResponse«Page«Post»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«Post»»",
              "originalRef": "BaseResponse«Page«Post»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post/list/page/vo": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "listPostVOByPage",
        "operationId": "listPostVOByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postQueryRequest",
            "description": "postQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostQueryRequest",
              "originalRef": "PostQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post/my/list/page/vo": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "listMyPostVOByPage",
        "operationId": "listMyPostVOByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postQueryRequest",
            "description": "postQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostQueryRequest",
              "originalRef": "PostQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post/search/page/vo": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "searchPostVOByPage",
        "operationId": "searchPostVOByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postQueryRequest",
            "description": "postQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostQueryRequest",
              "originalRef": "PostQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post/update": {
      "post": {
        "tags": [
          "post-controller"
        ],
        "summary": "updatePost",
        "operationId": "updatePostUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postUpdateRequest",
            "description": "postUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostUpdateRequest",
              "originalRef": "PostUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post_favour/": {
      "post": {
        "tags": [
          "post-favour-controller"
        ],
        "summary": "doPostFavour",
        "operationId": "doPostFavourUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postFavourAddRequest",
            "description": "postFavourAddRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostFavourAddRequest",
              "originalRef": "PostFavourAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«int»",
              "originalRef": "BaseResponse«int»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«int»",
              "originalRef": "BaseResponse«int»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post_favour/list/page": {
      "post": {
        "tags": [
          "post-favour-controller"
        ],
        "summary": "listFavourPostByPage",
        "operationId": "listFavourPostByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postFavourQueryRequest",
            "description": "postFavourQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostFavourQueryRequest",
              "originalRef": "PostFavourQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post_favour/my/list/page": {
      "post": {
        "tags": [
          "post-favour-controller"
        ],
        "summary": "listMyFavourPostByPage",
        "operationId": "listMyFavourPostByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postQueryRequest",
            "description": "postQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostQueryRequest",
              "originalRef": "PostQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«PostVO»»",
              "originalRef": "BaseResponse«Page«PostVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/post_thumb/": {
      "post": {
        "tags": [
          "post-thumb-controller"
        ],
        "summary": "doThumb",
        "operationId": "doThumbUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "postThumbAddRequest",
            "description": "postThumbAddRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostThumbAddRequest",
              "originalRef": "PostThumbAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«int»",
              "originalRef": "BaseResponse«int»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«int»",
              "originalRef": "BaseResponse«int»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/setMenu": {
      "get": {
        "tags": [
          "wx-mp-controller"
        ],
        "summary": "setMenu",
        "operationId": "setMenuUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/add": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "addUser",
        "operationId": "addUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userAddRequest",
            "description": "userAddRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAddRequest",
              "originalRef": "UserAddRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/ai/avatar/favorite": {
      "post": {
        "tags": [
          "user-ai-avatar-controller"
        ],
        "summary": "favoriteAiAvatar",
        "operationId": "favoriteAiAvatarUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "aiAvatarId",
            "in": "query",
            "description": "aiAvatarId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/ai/avatar/favorite/list": {
      "get": {
        "tags": [
          "user-ai-avatar-controller"
        ],
        "summary": "listUserFavoriteAiAvatars",
        "operationId": "listUserFavoriteAiAvatarsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "description": "current",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«AiAvatarVO»»",
              "originalRef": "BaseResponse«Page«AiAvatarVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«AiAvatarVO»»",
              "originalRef": "BaseResponse«Page«AiAvatarVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/ai/avatar/rate": {
      "post": {
        "tags": [
          "user-ai-avatar-controller"
        ],
        "summary": "rateAiAvatar",
        "operationId": "rateAiAvatarUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userAiAvatarRequest",
            "description": "userAiAvatarRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAiAvatarRequest",
              "originalRef": "UserAiAvatarRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/ai/avatar/recent": {
      "get": {
        "tags": [
          "user-ai-avatar-controller"
        ],
        "summary": "listUserRecentAiAvatars",
        "operationId": "listUserRecentAiAvatarsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«AiAvatarVO»»",
              "originalRef": "BaseResponse«List«AiAvatarVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«List«AiAvatarVO»»",
              "originalRef": "BaseResponse«List«AiAvatarVO»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/ai/avatar/settings": {
      "post": {
        "tags": [
          "user-ai-avatar-controller"
        ],
        "summary": "updateCustomSettings",
        "operationId": "updateCustomSettingsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userAiAvatarRequest",
            "description": "userAiAvatarRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAiAvatarRequest",
              "originalRef": "UserAiAvatarRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/ai/avatar/unfavorite": {
      "post": {
        "tags": [
          "user-ai-avatar-controller"
        ],
        "summary": "unfavoriteAiAvatar",
        "operationId": "unfavoriteAiAvatarUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "aiAvatarId",
            "in": "query",
            "description": "aiAvatarId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/delete": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "deleteUser",
        "operationId": "deleteUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "deleteRequest",
            "description": "deleteRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest",
              "originalRef": "DeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/get": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "getUserById",
        "operationId": "getUserByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«User»",
              "originalRef": "BaseResponse«User»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«User»",
              "originalRef": "BaseResponse«User»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/get/login": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "getLoginUser",
        "operationId": "getLoginUserUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«LoginUserVO»",
              "originalRef": "BaseResponse«LoginUserVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«LoginUserVO»",
              "originalRef": "BaseResponse«LoginUserVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/get/vo": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "getUserVOById",
        "operationId": "getUserVOByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserVO»",
              "originalRef": "BaseResponse«UserVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«UserVO»",
              "originalRef": "BaseResponse«UserVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/list/page": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "listUserByPage",
        "operationId": "listUserByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userQueryRequest",
            "description": "userQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserQueryRequest",
              "originalRef": "UserQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«User»»",
              "originalRef": "BaseResponse«Page«User»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«User»»",
              "originalRef": "BaseResponse«Page«User»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/list/page/vo": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "listUserVOByPage",
        "operationId": "listUserVOByPageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userQueryRequest",
            "description": "userQueryRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserQueryRequest",
              "originalRef": "UserQueryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«UserVO»»",
              "originalRef": "BaseResponse«Page«UserVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«Page«UserVO»»",
              "originalRef": "BaseResponse«Page«UserVO»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/login": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "userLogin",
        "operationId": "userLoginUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userLoginRequest",
            "description": "userLoginRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLoginRequest",
              "originalRef": "UserLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«LoginUserVO»",
              "originalRef": "BaseResponse«LoginUserVO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«LoginUserVO»",
              "originalRef": "BaseResponse«LoginUserVO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/login/phone": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "userLoginByPhone",
        "operationId": "userLoginByPhoneUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userLoginByPhoneRequest",
            "description": "userLoginByPhoneRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLoginByPhoneRequest",
              "originalRef": "UserLoginByPhoneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«LoginUserVO»",
              "originalRef": "BaseResponse«LoginUserVO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«LoginUserVO»",
              "originalRef": "BaseResponse«LoginUserVO»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/login/wx_open": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "userLoginByWxOpen",
        "operationId": "userLoginByWxOpenUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«LoginUserVO»",
              "originalRef": "BaseResponse«LoginUserVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«LoginUserVO»",
              "originalRef": "BaseResponse«LoginUserVO»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/logout": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "userLogout",
        "operationId": "userLogoutUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/register": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "userRegister",
        "operationId": "userRegisterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userRegisterRequest",
            "description": "userRegisterRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegisterRequest",
              "originalRef": "UserRegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/register/phone": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "userPhoneRegister",
        "operationId": "userPhoneRegisterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userPhoneRegisterRequest",
            "description": "userPhoneRegisterRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPhoneRegisterRequest",
              "originalRef": "UserPhoneRegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«long»",
              "originalRef": "BaseResponse«long»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/update": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "updateUser",
        "operationId": "updateUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userUpdateRequest",
            "description": "userUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateRequest",
              "originalRef": "UserUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    },
    "/api/user/update/my": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "updateMyUser",
        "operationId": "updateMyUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userUpdateMyRequest",
            "description": "userUpdateMyRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdateMyRequest",
              "originalRef": "UserUpdateMyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "responsesObject": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse«boolean»",
              "originalRef": "BaseResponse«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-order": "2147483647"
      }
    }
  },
  "definitions": {
    "Achievement": {
      "type": "object",
      "properties": {
        "achievementCondition": {
          "type": "string",
          "refType": null
        },
        "adminId": {
          "type": "integer",
          "format": "int64",
          "refType": null
        },
        "badgeUrl": {
          "type": "string",
          "refType": null
        },
        "bannerUrl": {
          "type": "string",
          "refType": null
        },
        "category": {
          "type": "string",
          "refType": null
        },
        "conditionType": {
          "type": "string",
          "refType": null
        },
        "conditionValue": {
          "type": "integer",
          "format": "int32",
          "refType": null
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "refType": null
        },
        "description": {
          "type": "string",
          "refType": null
        },
        "iconUrl": {
          "type": "string",
          "refType": null
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "refType": null
        },
        "isDelete": {
          "type": "integer",
          "format": "int32",
          "refType": null
        },
        "isHidden": {
          "type": "integer",
          "format": "int32",
          "refType": null
        },
        "isSecret": {
          "type": "integer",
          "format": "int32",
          "refType": null
        },
        "level": {
          "type": "integer",
          "format": "int32",
          "refType": null
        },
        "name": {
          "type": "string",
          "refType": null
        },
        "points": {
          "type": "integer",
          "format": "int32",
          "refType": null
        },
        "rewardType": {
          "type": "string",
          "refType": null
        },
        "rewardValue": {
          "type": "string",
          "refType": null
        },
        "sort": {
          "type": "integer",
          "format": "int32",
          "refType": null
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "refType": null
        }
      },
      "title": "Achievement"
    },
    "AchievementDisplay": {
      "type": "object",
      "properties": {
        "achievementId": {
          "type": "integer",
          "format": "int64"
        },
        "adminId": {
          "type": "integer",
          "format": "int64"
        },
        "animationType": {
          "type": "string"
        },
        "backgroundColor": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "displayDuration": {
          "type": "integer",
          "format": "int32"
        },
        "displayType": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "imageUrl": {
          "type": "string"
        },
        "isDelete": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "integer",
          "format": "int32"
        },
        "subtitle": {
          "type": "string"
        },
        "textColor": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "AchievementDisplay"
    },
    "AiAvatarAddRequest": {
      "type": "object",
      "properties": {
        "abilities": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isPublic": {
          "type": "integer",
          "format": "int32"
        },
        "modelConfig": {
          "type": "string"
        },
        "modelType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "personality": {
          "type": "string"
        },
        "promptTemplate": {
          "type": "string"
        },
        "sort": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "string"
        }
      },
      "title": "AiAvatarAddRequest"
    },
    "AiAvatarChatRequest": {
      "type": "object",
      "properties": {
        "aiAvatarId": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "string"
        },
        "customSettings": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      },
      "title": "AiAvatarChatRequest"
    },
    "AiAvatarChatVO": {
      "type": "object",
      "properties": {
        "aiAvatarId": {
          "type": "integer",
          "format": "int64"
        },
        "aiAvatarName": {
          "type": "string"
        },
        "aiAvatarUrl": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "messageType": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "tokens": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AiAvatarChatVO"
    },
    "AiAvatarQueryRequest": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "creatorId": {
          "type": "integer",
          "format": "int64"
        },
        "creatorType": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isPublic": {
          "type": "integer",
          "format": "int32"
        },
        "modelType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "searchText": {
          "type": "string"
        },
        "sortField": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "string"
        }
      },
      "title": "AiAvatarQueryRequest"
    },
    "AiAvatarUpdateRequest": {
      "type": "object",
      "properties": {
        "abilities": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isPublic": {
          "type": "integer",
          "format": "int32"
        },
        "modelConfig": {
          "type": "string"
        },
        "modelType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "personality": {
          "type": "string"
        },
        "promptTemplate": {
          "type": "string"
        },
        "sort": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "string"
        }
      },
      "title": "AiAvatarUpdateRequest"
    },
    "AiAvatarVO": {
      "type": "object",
      "properties": {
        "abilities": {
          "type": "string"
        },
        "avatarUrl": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "type": "integer",
          "format": "int64"
        },
        "creatorType": {
          "type": "string"
        },
        "customSettings": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isFavorite": {
          "type": "boolean"
        },
        "isPublic": {
          "type": "integer",
          "format": "int32"
        },
        "modelType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "personality": {
          "type": "string"
        },
        "promptTemplate": {
          "type": "string"
        },
        "rating": {
          "type": "number"
        },
        "ratingCount": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "usageCount": {
          "type": "integer",
          "format": "int32"
        },
        "userRating": {
          "type": "number"
        },
        "userUseCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "AiAvatarVO"
    },
    "Announcement": {
      "type": "object",
      "properties": {
        "adminId": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "string"
        },
        "coverImage": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isDelete": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "viewCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Announcement"
    },
    "AnnouncementAddRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "coverImage": {
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      },
      "title": "AnnouncementAddRequest"
    },
    "AnnouncementQueryRequest": {
      "type": "object",
      "properties": {
        "adminId": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "sortField": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      },
      "title": "AnnouncementQueryRequest"
    },
    "AnnouncementUpdateRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "coverImage": {
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      },
      "title": "AnnouncementUpdateRequest"
    },
    "BaseResponse«AchievementDisplay»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/AchievementDisplay",
          "originalRef": "AchievementDisplay"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«AchievementDisplay»"
    },
    "BaseResponse«Achievement»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Achievement",
          "originalRef": "Achievement"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Achievement»"
    },
    "BaseResponse«AiAvatarChatVO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/AiAvatarChatVO",
          "originalRef": "AiAvatarChatVO"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«AiAvatarChatVO»"
    },
    "BaseResponse«AiAvatarVO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/AiAvatarVO",
          "originalRef": "AiAvatarVO"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«AiAvatarVO»"
    },
    "BaseResponse«Announcement»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Announcement",
          "originalRef": "Announcement"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Announcement»"
    },
    "BaseResponse«DailyArticleVO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/DailyArticleVO",
          "originalRef": "DailyArticleVO"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«DailyArticleVO»"
    },
    "BaseResponse«DailyWordVO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/DailyWordVO",
          "originalRef": "DailyWordVO"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«DailyWordVO»"
    },
    "BaseResponse«IPage«Achievement»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/IPage«Achievement»",
          "originalRef": "IPage«Achievement»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«IPage«Achievement»»"
    },
    "BaseResponse«IPage«UserLearningRecord»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/IPage«UserLearningRecord»",
          "originalRef": "IPage«UserLearningRecord»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«IPage«UserLearningRecord»»"
    },
    "BaseResponse«List«AchievementDisplay»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AchievementDisplay",
            "originalRef": "AchievementDisplay"
          }
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«List«AchievementDisplay»»"
    },
    "BaseResponse«List«Achievement»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Achievement",
            "originalRef": "Achievement"
          }
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«List«Achievement»»"
    },
    "BaseResponse«List«AiAvatarVO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AiAvatarVO",
            "originalRef": "AiAvatarVO"
          }
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«List«AiAvatarVO»»"
    },
    "BaseResponse«List«Announcement»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Announcement",
            "originalRef": "Announcement"
          }
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«List«Announcement»»"
    },
    "BaseResponse«List«DailyArticleVO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DailyArticleVO",
            "originalRef": "DailyArticleVO"
          }
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«List«DailyArticleVO»»"
    },
    "BaseResponse«List«DailyWordVO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DailyWordVO",
            "originalRef": "DailyWordVO"
          }
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«List«DailyWordVO»»"
    },
    "BaseResponse«List«UserAchievement»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAchievement",
            "originalRef": "UserAchievement"
          }
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«List«UserAchievement»»"
    },
    "BaseResponse«List«UserLearningRecord»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserLearningRecord",
            "originalRef": "UserLearningRecord"
          }
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«List«UserLearningRecord»»"
    },
    "BaseResponse«List«string»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«List«string»»"
    },
    "BaseResponse«LoginUserVO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/LoginUserVO",
          "originalRef": "LoginUserVO"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«LoginUserVO»"
    },
    "BaseResponse«Page«AiAvatarChatVO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Page«AiAvatarChatVO»",
          "originalRef": "Page«AiAvatarChatVO»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Page«AiAvatarChatVO»»"
    },
    "BaseResponse«Page«AiAvatarVO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Page«AiAvatarVO»",
          "originalRef": "Page«AiAvatarVO»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Page«AiAvatarVO»»"
    },
    "BaseResponse«Page«Announcement»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Page«Announcement»",
          "originalRef": "Page«Announcement»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Page«Announcement»»"
    },
    "BaseResponse«Page«DailyArticleVO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Page«DailyArticleVO»",
          "originalRef": "Page«DailyArticleVO»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Page«DailyArticleVO»»"
    },
    "BaseResponse«Page«DailyWordVO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Page«DailyWordVO»",
          "originalRef": "Page«DailyWordVO»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Page«DailyWordVO»»"
    },
    "BaseResponse«Page«PostVO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Page«PostVO»",
          "originalRef": "Page«PostVO»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Page«PostVO»»"
    },
    "BaseResponse«Page«Post»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Page«Post»",
          "originalRef": "Page«Post»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Page«Post»»"
    },
    "BaseResponse«Page«UserVO»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Page«UserVO»",
          "originalRef": "Page«UserVO»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Page«UserVO»»"
    },
    "BaseResponse«Page«User»»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/Page«User»",
          "originalRef": "Page«User»"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«Page«User»»"
    },
    "BaseResponse«PostVO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/PostVO",
          "originalRef": "PostVO"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«PostVO»"
    },
    "BaseResponse«UserAchievement»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/UserAchievement",
          "originalRef": "UserAchievement"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«UserAchievement»"
    },
    "BaseResponse«UserDailyGoal»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/UserDailyGoal",
          "originalRef": "UserDailyGoal"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«UserDailyGoal»"
    },
    "BaseResponse«UserLearningRecord»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/UserLearningRecord",
          "originalRef": "UserLearningRecord"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«UserLearningRecord»"
    },
    "BaseResponse«UserLearningStats»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/UserLearningStats",
          "originalRef": "UserLearningStats"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«UserLearningStats»"
    },
    "BaseResponse«UserVO»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/UserVO",
          "originalRef": "UserVO"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«UserVO»"
    },
    "BaseResponse«User»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "$ref": "#/definitions/User",
          "originalRef": "User"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«User»"
    },
    "BaseResponse«boolean»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«boolean»"
    },
    "BaseResponse«int»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«int»"
    },
    "BaseResponse«long»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«long»"
    },
    "BaseResponse«string»": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "data": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "BaseResponse«string»"
    },
    "Course": {
      "type": "object",
      "properties": {
        "adminId": {
          "type": "integer",
          "format": "int64"
        },
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "courseType": {
          "type": "integer",
          "format": "int32"
        },
        "coverImage": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "difficulty": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isDelete": {
          "type": "integer",
          "format": "int32"
        },
        "objectives": {
          "type": "string"
        },
        "originalPrice": {
          "type": "number"
        },
        "price": {
          "type": "number"
        },
        "ratingCount": {
          "type": "integer",
          "format": "int32"
        },
        "ratingScore": {
          "type": "number"
        },
        "requirements": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "studentCount": {
          "type": "integer",
          "format": "int32"
        },
        "subtitle": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "targetAudience": {
          "type": "string"
        },
        "teacherId": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "totalChapters": {
          "type": "integer",
          "format": "int32"
        },
        "totalDuration": {
          "type": "integer",
          "format": "int32"
        },
        "totalSections": {
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Course"
    },
    "DailyArticleAddRequest": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "coverImage": {
          "type": "string"
        },
        "difficulty": {
          "type": "integer",
          "format": "int32"
        },
        "publishDate": {
          "type": "string",
          "format": "date-time"
        },
        "readTime": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "type": "string"
        },
        "sourceUrl": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "title": "DailyArticleAddRequest"
    },
    "DailyArticleQueryRequest": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "difficulty": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "publishDate": {
          "type": "string",
          "format": "date-time"
        },
        "searchText": {
          "type": "string"
        },
        "sortField": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "title": "DailyArticleQueryRequest"
    },
    "DailyArticleUpdateRequest": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "coverImage": {
          "type": "string"
        },
        "difficulty": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "publishDate": {
          "type": "string",
          "format": "date-time"
        },
        "readTime": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "type": "string"
        },
        "sourceUrl": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "title": "DailyArticleUpdateRequest"
    },
    "DailyArticleVO": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "coverImage": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "difficulty": {
          "type": "integer",
          "format": "int32"
        },
        "hasLiked": {
          "type": "boolean"
        },
        "hasRead": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "likeCount": {
          "type": "integer",
          "format": "int32"
        },
        "publishDate": {
          "type": "string",
          "format": "date-time"
        },
        "readTime": {
          "type": "integer",
          "format": "int32"
        },
        "readingProgress": {
          "type": "integer",
          "format": "int32"
        },
        "source": {
          "type": "string"
        },
        "sourceUrl": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "tags": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "viewCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "DailyArticleVO"
    },
    "DailyWordAddRequest": {
      "type": "object",
      "properties": {
        "audioUrl": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "difficulty": {
          "type": "integer",
          "format": "int32"
        },
        "example": {
          "type": "string"
        },
        "exampleTranslation": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "pronunciation": {
          "type": "string"
        },
        "publishDate": {
          "type": "string",
          "format": "date-time"
        },
        "translation": {
          "type": "string"
        },
        "word": {
          "type": "string"
        }
      },
      "title": "DailyWordAddRequest"
    },
    "DailyWordQueryRequest": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "difficulty": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "publishDate": {
          "type": "string",
          "format": "date-time"
        },
        "searchText": {
          "type": "string"
        },
        "sortField": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "translation": {
          "type": "string"
        },
        "word": {
          "type": "string"
        }
      },
      "title": "DailyWordQueryRequest"
    },
    "DailyWordUpdateRequest": {
      "type": "object",
      "properties": {
        "audioUrl": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "difficulty": {
          "type": "integer",
          "format": "int32"
        },
        "example": {
          "type": "string"
        },
        "exampleTranslation": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "notes": {
          "type": "string"
        },
        "pronunciation": {
          "type": "string"
        },
        "publishDate": {
          "type": "string",
          "format": "date-time"
        },
        "translation": {
          "type": "string"
        },
        "word": {
          "type": "string"
        }
      },
      "title": "DailyWordUpdateRequest"
    },
    "DailyWordVO": {
      "type": "object",
      "properties": {
        "audioUrl": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "difficulty": {
          "type": "integer",
          "format": "int32"
        },
        "example": {
          "type": "string"
        },
        "exampleTranslation": {
          "type": "string"
        },
        "hasLearned": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "learningProgress": {
          "type": "integer",
          "format": "int32"
        },
        "notes": {
          "type": "string"
        },
        "pronunciation": {
          "type": "string"
        },
        "publishDate": {
          "type": "string",
          "format": "date-time"
        },
        "translation": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "word": {
          "type": "string"
        }
      },
      "title": "DailyWordVO"
    },
    "DeleteRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "DeleteRequest"
    },
    "IPage«Achievement»": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Achievement",
            "originalRef": "Achievement"
          }
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "IPage«Achievement»"
    },
    "IPage«Course»": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Course",
            "originalRef": "Course"
          }
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "IPage«Course»"
    },
    "IPage«UserLearningRecord»": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserLearningRecord",
            "originalRef": "UserLearningRecord"
          }
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "IPage«UserLearningRecord»"
    },
    "LoginUserVO": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time",
          "refType": null
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "refType": null
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "refType": null
        },
        "userAvatar": {
          "type": "string",
          "refType": null
        },
        "userName": {
          "type": "string",
          "refType": null
        },
        "userProfile": {
          "type": "string",
          "refType": null
        },
        "userRole": {
          "type": "string",
          "refType": null
        }
      },
      "title": "LoginUserVO"
    },
    "OrderItem": {
      "type": "object",
      "properties": {
        "asc": {
          "type": "boolean"
        },
        "column": {
          "type": "string"
        }
      },
      "title": "OrderItem"
    },
    "Page«AiAvatarChatVO»": {
      "type": "object",
      "properties": {
        "countId": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int64"
        },
        "optimizeCountSql": {
          "type": "boolean"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem",
            "originalRef": "OrderItem"
          }
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AiAvatarChatVO",
            "originalRef": "AiAvatarChatVO"
          }
        },
        "searchCount": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Page«AiAvatarChatVO»"
    },
    "Page«AiAvatarVO»": {
      "type": "object",
      "properties": {
        "countId": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int64"
        },
        "optimizeCountSql": {
          "type": "boolean"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem",
            "originalRef": "OrderItem"
          }
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AiAvatarVO",
            "originalRef": "AiAvatarVO"
          }
        },
        "searchCount": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Page«AiAvatarVO»"
    },
    "Page«Announcement»": {
      "type": "object",
      "properties": {
        "countId": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int64"
        },
        "optimizeCountSql": {
          "type": "boolean"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem",
            "originalRef": "OrderItem"
          }
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Announcement",
            "originalRef": "Announcement"
          }
        },
        "searchCount": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Page«Announcement»"
    },
    "Page«DailyArticleVO»": {
      "type": "object",
      "properties": {
        "countId": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int64"
        },
        "optimizeCountSql": {
          "type": "boolean"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem",
            "originalRef": "OrderItem"
          }
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DailyArticleVO",
            "originalRef": "DailyArticleVO"
          }
        },
        "searchCount": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Page«DailyArticleVO»"
    },
    "Page«DailyWordVO»": {
      "type": "object",
      "properties": {
        "countId": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int64"
        },
        "optimizeCountSql": {
          "type": "boolean"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem",
            "originalRef": "OrderItem"
          }
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DailyWordVO",
            "originalRef": "DailyWordVO"
          }
        },
        "searchCount": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Page«DailyWordVO»"
    },
    "Page«PostVO»": {
      "type": "object",
      "properties": {
        "countId": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int64"
        },
        "optimizeCountSql": {
          "type": "boolean"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem",
            "originalRef": "OrderItem"
          }
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostVO",
            "originalRef": "PostVO"
          }
        },
        "searchCount": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Page«PostVO»"
    },
    "Page«Post»": {
      "type": "object",
      "properties": {
        "countId": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int64"
        },
        "optimizeCountSql": {
          "type": "boolean"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem",
            "originalRef": "OrderItem"
          }
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Post",
            "originalRef": "Post"
          }
        },
        "searchCount": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Page«Post»"
    },
    "Page«UserVO»": {
      "type": "object",
      "properties": {
        "countId": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int64"
        },
        "optimizeCountSql": {
          "type": "boolean"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem",
            "originalRef": "OrderItem"
          }
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserVO",
            "originalRef": "UserVO"
          }
        },
        "searchCount": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Page«UserVO»"
    },
    "Page«User»": {
      "type": "object",
      "properties": {
        "countId": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "maxLimit": {
          "type": "integer",
          "format": "int64"
        },
        "optimizeCountSql": {
          "type": "boolean"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderItem",
            "originalRef": "OrderItem"
          }
        },
        "pages": {
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User",
            "originalRef": "User"
          }
        },
        "searchCount": {
          "type": "boolean"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Page«User»"
    },
    "Post": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "favourNum": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isDelete": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "string"
        },
        "thumbNum": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Post"
    },
    "PostAddRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "title": "PostAddRequest"
    },
    "PostEditRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "title": "PostEditRequest"
    },
    "PostFavourAddRequest": {
      "type": "object",
      "properties": {
        "postId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PostFavourAddRequest"
    },
    "PostFavourQueryRequest": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "postQueryRequest": {
          "$ref": "#/definitions/PostQueryRequest",
          "originalRef": "PostQueryRequest"
        },
        "sortField": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PostFavourQueryRequest"
    },
    "PostQueryRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "favourUserId": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "notId": {
          "type": "integer",
          "format": "int64"
        },
        "orTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "searchText": {
          "type": "string"
        },
        "sortField": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PostQueryRequest"
    },
    "PostThumbAddRequest": {
      "type": "object",
      "properties": {
        "postId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PostThumbAddRequest"
    },
    "PostUpdateRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "title": "PostUpdateRequest"
    },
    "PostVO": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "favourNum": {
          "type": "integer",
          "format": "int32"
        },
        "hasFavour": {
          "type": "boolean"
        },
        "hasThumb": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "tagList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "thumbNum": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "user": {
          "$ref": "#/definitions/UserVO",
          "originalRef": "UserVO"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "PostVO"
    },
    "UploadFileRequest": {
      "type": "object",
      "properties": {
        "base64Data": {
          "type": "string"
        },
        "biz": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        }
      },
      "title": "UploadFileRequest"
    },
    "User": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isDelete": {
          "type": "integer",
          "format": "int32"
        },
        "mpOpenId": {
          "type": "string"
        },
        "unionId": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "userAccount": {
          "type": "string"
        },
        "userAvatar": {
          "type": "string"
        },
        "userGender": {
          "type": "integer",
          "format": "int32"
        },
        "userName": {
          "type": "string"
        },
        "userPassword": {
          "type": "string"
        },
        "userPhone": {
          "type": "string"
        },
        "userProfile": {
          "type": "string"
        },
        "userRole": {
          "type": "string"
        }
      },
      "title": "User"
    },
    "UserAchievement": {
      "type": "object",
      "properties": {
        "achievementId": {
          "type": "integer",
          "format": "int64"
        },
        "completedTime": {
          "type": "string",
          "format": "date-time"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isCompleted": {
          "type": "integer",
          "format": "int32"
        },
        "isRewarded": {
          "type": "integer",
          "format": "int32"
        },
        "progress": {
          "type": "integer",
          "format": "int32"
        },
        "progressMax": {
          "type": "integer",
          "format": "int32"
        },
        "progressPercent": {
          "type": "integer",
          "format": "int32"
        },
        "rewardTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "UserAchievement"
    },
    "UserAddRequest": {
      "type": "object",
      "properties": {
        "userAccount": {
          "type": "string"
        },
        "userAvatar": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "userProfile": {
          "type": "string"
        },
        "userRole": {
          "type": "string"
        }
      },
      "title": "UserAddRequest"
    },
    "UserAiAvatarRequest": {
      "type": "object",
      "properties": {
        "aiAvatarId": {
          "type": "integer",
          "format": "int64"
        },
        "customSettings": {
          "type": "string"
        },
        "feedback": {
          "type": "string"
        },
        "rating": {
          "type": "number"
        }
      },
      "title": "UserAiAvatarRequest"
    },
    "UserDailyGoal": {
      "type": "object",
      "properties": {
        "completedGoals": {
          "type": "integer",
          "format": "int32"
        },
        "completedMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "completedTime": {
          "type": "string",
          "format": "date-time"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "goalDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isCompleted": {
          "type": "integer",
          "format": "int32"
        },
        "progressPercent": {
          "type": "integer",
          "format": "int32"
        },
        "targetMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "totalGoals": {
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "UserDailyGoal"
    },
    "UserLearningRecord": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "experience": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "points": {
          "type": "integer",
          "format": "int32"
        },
        "recordDate": {
          "type": "string",
          "format": "date-time"
        },
        "recordType": {
          "type": "string"
        },
        "relatedId": {
          "type": "integer",
          "format": "int64"
        },
        "remark": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "UserLearningRecord"
    },
    "UserLearningStats": {
      "type": "object",
      "properties": {
        "continuousCheckIn": {
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "experience": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastCheckInTime": {
          "type": "string",
          "format": "date-time"
        },
        "learningDays": {
          "type": "integer",
          "format": "int32"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "nextLevelExp": {
          "type": "integer",
          "format": "int32"
        },
        "nickname": {
          "type": "string"
        },
        "totalBadges": {
          "type": "integer",
          "format": "int32"
        },
        "totalCheckIn": {
          "type": "integer",
          "format": "int32"
        },
        "totalPoints": {
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "UserLearningStats"
    },
    "UserLoginByPhoneRequest": {
      "type": "object",
      "properties": {
        "userPassword": {
          "type": "string"
        },
        "userPhone": {
          "type": "string"
        }
      },
      "title": "UserLoginByPhoneRequest"
    },
    "UserLoginRequest": {
      "type": "object",
      "properties": {
        "userAccount": {
          "type": "string"
        },
        "userPassword": {
          "type": "string"
        }
      },
      "title": "UserLoginRequest"
    },
    "UserPhoneRegisterRequest": {
      "type": "object",
      "properties": {
        "checkPassword": {
          "type": "string"
        },
        "userPassword": {
          "type": "string"
        },
        "userPhone": {
          "type": "string"
        }
      },
      "title": "UserPhoneRegisterRequest"
    },
    "UserQueryRequest": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "mpOpenId": {
          "type": "string"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "sortField": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "unionId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "userProfile": {
          "type": "string"
        },
        "userRole": {
          "type": "string"
        }
      },
      "title": "UserQueryRequest"
    },
    "UserRegisterRequest": {
      "type": "object",
      "properties": {
        "checkPassword": {
          "type": "string"
        },
        "userAccount": {
          "type": "string"
        },
        "userPassword": {
          "type": "string"
        }
      },
      "title": "UserRegisterRequest"
    },
    "UserUpdateMyRequest": {
      "type": "object",
      "properties": {
        "userAvatar": {
          "type": "string",
          "refType": null
        },
        "userName": {
          "type": "string",
          "refType": null
        },
        "userPassword": {
          "type": "string",
          "refType": null
        },
        "userPhone": {
          "type": "string",
          "refType": null
        },
        "userProfile": {
          "type": "string",
          "refType": null
        },
        "userRole": {
          "type": "string",
          "refType": null
        }
      },
      "title": "UserUpdateMyRequest"
    },
    "UserUpdateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "refType": null
        },
        "userAvatar": {
          "type": "string",
          "refType": null
        },
        "userName": {
          "type": "string",
          "refType": null
        },
        "userProfile": {
          "type": "string",
          "refType": null
        },
        "userRole": {
          "type": "string",
          "refType": null
        }
      },
      "title": "UserUpdateRequest"
    },
    "UserVO": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "userAvatar": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "userProfile": {
          "type": "string"
        },
        "userRole": {
          "type": "string"
        }
      },
      "title": "UserVO"
    }
  },
  "x-openapi": {
    "x-markdownFiles": null,
    "x-setting": {
      "language": "zh-CN",
      "enableSwaggerModels": true,
      "swaggerModelName": "Swagger Models",
      "enableReloadCacheParameter": false,
      "enableAfterScript": true,
      "enableDocumentManage": true,
      "enableVersion": false,
      "enableRequestCache": true,
      "enableFilterMultipartApis": false,
      "enableFilterMultipartApiMethodType": "POST",
      "enableHost": false,
      "enableHostText": "",
      "enableDynamicParameter": false,
      "enableDebug": true,
      "enableFooter": true,
      "enableFooterCustom": false,
      "footerCustomContent": null,
      "enableSearch": true,
      "enableOpenApi": true,
      "enableHomeCustom": false,
      "homeCustomLocation": null,
      "enableGroup": true,
      "enableResponseCode": true
    }
  }
}